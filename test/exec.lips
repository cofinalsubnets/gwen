; some miscellaneous functions
(test execution
 ; a quine
 ((\ q (= (ev q) q))
  ((\ q ((ev q) q))
   '(\ q (L q (Q q)))))

 ; call/cc
 (= 1 (ccc (\ ret
  (, (ret 1) (fail "unreachable")))))

 ; fibonacci
 (= 2178309 (>>= 32 (: (fib n)
  (? (< n 3) 1
   (+ (fib (- n 1)) (fib (- n 2)))))))

 ; ackermann
 (= 4093 (>>= 3 9 (: (ack m n)
  (? (< m 1) (+ n 1)
   (ack (- m 1) (? (> n 0) (ack m (- n 1)) 1))))))

 ; takeuchi
 (= 13 (>>= 12 13 14 (: (tarai x y z)
  (? (<= x y) y (tarai
   (tarai (- x 1) y z)
   (tarai (- y 1) x z)
   (tarai (- z 1) x y))))))

 ; church numerals
 (: K const I id ; kind of like SK combinators
    (((P f) g) x) (f (g x)) ; normal composition
    (((T f) g) x) ((P (f x)) (g x)) ; with an argument

    zero (K I) one I exp I mul P add T succ (add one)

    (C n) (? (= n 0) zero (succ (C (- n 1)))) ; send it to its church numeral
    (N c) ((c (\ x (+ x 1))) 0)               ; send it back

    two (succ one) five (succ ((mul two) two))
    ten ((mul two) five)
    one-hundred ((exp two) ten)
  (= 100 (N (C 100)) (N one-hundred)))

 (: (hy n) (? (= n 0) + (\ x y
     ((: (hz hx x y i) (? (< i y) (hx x (hz hx x y (+ i 1))) x))
      (hy (- n 1)) x y 1)))
    pow (hy 2)
    tet (hy 3)
  (= 65536 (<< 1 16) (pow 2 16) (tet 2 4))))
