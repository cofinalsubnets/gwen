(: l (L 0 1 2 3 4 5 6 7 8 9)
   m (map (diag +) l)
   n (map (* 2) l)
   (even n) (? n (odd (dec n)) -1)
   (odd n) (? n (even (dec n)))
   eo (part even l)
   es (A eo)
   os (B eo)
 (assert
  (= l '(0 1 2 3 4 5 6 7 8 9))
  (= m n)
  (= 10 (llen (cat es os)))
  (= (llen es) (llen os))
  (all even es)
  (all odd os)
  (all even m)
  (any odd l)
  (memq 1 '(1 2 3 4))
  (nilp (memq 5 '(1 2 3 4)))
  (= '(1 2 3) (rev '(3 2 1)))
  (= '(1 2 3 4 5 6) (cat '(1 2 3) '(4 5 6)))
  ))
(assert (= '(1 2 3 4) (rev '(4 3 2 1)))
  (= '(1 2 3 4 5) (cat '(1 2 3) '(4 5)))
)
